[{"C:\\Users\\atocchi\\Desktop\\Projects\\heatpi\\frontend\\src\\index.js":"1","C:\\Users\\atocchi\\Desktop\\Projects\\heatpi\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\atocchi\\Desktop\\Projects\\heatpi\\frontend\\src\\App.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":4182,"mtime":1610864220606,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qmksm5",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\atocchi\\Desktop\\Projects\\heatpi\\frontend\\src\\index.js",[],"C:\\Users\\atocchi\\Desktop\\Projects\\heatpi\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\atocchi\\Desktop\\Projects\\heatpi\\frontend\\src\\App.js",["14","15","16","17","18","19"],{"ruleId":"20","severity":1,"message":"21","line":13,"column":7,"nodeType":"22","messageId":"23","endLine":13,"endColumn":16},{"ruleId":"20","severity":1,"message":"24","line":28,"column":10,"nodeType":"22","messageId":"23","endLine":28,"endColumn":14},{"ruleId":"25","severity":1,"message":"26","line":40,"column":15,"nodeType":"27","endLine":40,"endColumn":28},{"ruleId":"28","severity":1,"message":"29","line":54,"column":20,"nodeType":"30","messageId":"31","endLine":54,"endColumn":22},{"ruleId":"28","severity":1,"message":"29","line":101,"column":12,"nodeType":"30","messageId":"31","endLine":101,"endColumn":14},{"ruleId":"32","severity":1,"message":"33","line":117,"column":13,"nodeType":"34","endLine":117,"endColumn":31},"no-unused-vars","'useStyles' is assigned a value but never used.","Identifier","unusedVar","'time' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'timex' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]